[
  {
    "line": 1,
    "uri": "samples/attachments/attachments.feature",
    "id": "attachments",
    "keyword": "Feature",
    "name": "Attachments",
    "description": "  It is sometimes useful to take a screenshot while a scenario runs or capture some logs.\n\n  Cucumber lets you `attach` arbitrary files during execution, and you can\n  specify a content type for the contents.\n\n  Formatters can then render these attachments in reports.\n\n  Attachments must have a body and a content type.",
    "elements": [
      {
        "start_timestamp": "1970-01-01T00:00:00.001Z",
        "line": 11,
        "id": "attachments;strings-can-be-attached-with-a-media-type",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Strings can be attached with a media type",
        "description": "    Beware that some formatters such as @cucumber/react use the media type\n    to determine how to display an attachment.",
        "steps": [
          {
            "keyword": "When ",
            "line": 15,
            "match": {
              "location": "samples/attachments/attachments.ts:4",
              "arguments": [
                {
                  "val": "\"hello\"",
                  "offset": 11
                },
                {
                  "val": "\"application/octet-stream\"",
                  "offset": 34
                }
              ]
            },
            "name": "the string \"hello\" is attached as \"application/octet-stream\"",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "embeddings": [
              {
                "mime_type": "application/octet-stream",
                "data": "aGVsbG8="
              }
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.006Z",
        "line": 17,
        "id": "attachments;log-text",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Log text",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 18,
            "match": {
              "location": "samples/attachments/attachments.ts:8",
              "arguments": [
                {
                  "val": "\"hello\"",
                  "offset": 11
                }
              ]
            },
            "name": "the string \"hello\" is logged",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "output": [
              "hello"
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.011Z",
        "line": 20,
        "id": "attachments;log-ansi-coloured-text",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Log ANSI coloured text",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 21,
            "match": {
              "location": "samples/attachments/attachments.ts:12"
            },
            "name": "text with ANSI escapes is logged",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "output": [
              "This displays a \u001B[31mr\u001B[0m\u001B[91ma\u001B[0m\u001B[33mi\u001B[0m\u001B[32mn\u001B[0m\u001B[34mb\u001B[0m\u001B[95mo\u001B[0m\u001B[35mw\u001B[0m"
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.016Z",
        "line": 23,
        "id": "attachments;log-json",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Log JSON",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 24,
            "match": {
              "location": "samples/attachments/attachments.ts:18",
              "arguments": [
                {
                  "val": "\"application/json\"",
                  "offset": 36
                }
              ]
            },
            "name": "the following string is attached as \"application/json\":",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "doc_string": {
              "line": 25,
              "value": "{\"message\": \"The <b>big</b> question\", \"foo\": \"bar\"}"
            },
            "embeddings": [
              {
                "mime_type": "application/json",
                "data": "eyJtZXNzYWdlIjogIlRoZSA8Yj5iaWc8L2I+IHF1ZXN0aW9uIiwgImZvbyI6ICJiYXIifQ=="
              }
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.021Z",
        "line": 29,
        "id": "attachments;byte-arrays-are-base64-encoded-regardless-of-media-type",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Byte arrays are base64-encoded regardless of media type",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 30,
            "match": {
              "location": "samples/attachments/attachments.ts:22",
              "arguments": [
                {
                  "val": "10",
                  "offset": 14
                },
                {
                  "val": "\"text/plain\"",
                  "offset": 38
                }
              ]
            },
            "name": "an array with 10 bytes is attached as \"text/plain\"",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "embeddings": [
              {
                "mime_type": "text/plain",
                "data": "AAECAwQFBgcICQ=="
              }
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.026Z",
        "line": 32,
        "id": "attachments;attaching-pdfs-with-a-different-filename",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Attaching PDFs with a different filename",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 33,
            "match": {
              "location": "samples/attachments/attachments.ts:31"
            },
            "name": "a PDF document is attached and renamed",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "embeddings": [
              {
                "mime_type": "application/pdf",
                "data": "",
                "name": "renamed.pdf"
              }
            ]
          }
        ]
      },
      {
        "start_timestamp": "1970-01-01T00:00:00.031Z",
        "line": 35,
        "id": "attachments;attaching-uris",
        "type": "scenario",
        "keyword": "Scenario",
        "name": "Attaching URIs",
        "description": "",
        "steps": [
          {
            "keyword": "When ",
            "line": 36,
            "match": {
              "location": "samples/attachments/attachments.ts:38",
              "arguments": [
                {
                  "val": "\"https://cucumber.io\"",
                  "offset": 10
                }
              ]
            },
            "name": "a link to \"https://cucumber.io\" is attached",
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "embeddings": [
              {
                "mime_type": "text/uri-list",
                "data": "aHR0cHM6Ly9jdWN1bWJlci5pbw=="
              }
            ]
          }
        ]
      }
    ],
    "tags": [ ]
  }
]